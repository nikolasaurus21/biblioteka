@model IEnumerable<Biblioteka.DTO.ClanGetDTO>
@{
    ViewBag.Title = "Index";
}

<h2 class="text-center ">Članovi</h2>

<div class="table-responsive">
    <div class=" d-flex justify-content-between">

    @Html.ActionLink("Nazad", "Index", "Home", null, new { @class = "btn btn-secondary mb-2" })
    @Html.ActionLink("Dodaj novog člana", "Create", "Clanovi", null, new { @class = "btn btn-success mb-2" })
    </div>
    <table id="clanovi" class="table table-bordered table table-striped">
        <thead>
            <tr>
                <th>
                    Ime i prezime
                </th>
                
                <th>
                    Matični broj
                </th>
                <th>
                    Email
                </th>
                <th>
                    Adresa
                </th>
                <th>
                    Datum Rođenja
                </th>
                <th>
                    Obriši člana
                </th>

            </tr>


        </thead>

        <tbody>
            @foreach (var clan in Model)
            {
                <tr accesskey="@clan.ClanID">
                    <td>
                        @Html.ActionLink($"{@clan.Ime} {@clan.Prezime}", "Edit", "Clanovi", new { id = clan.ClanID }, null)
                    </td>


                    <td>
                        @clan.MaticniBroj
                    </td>
                    <td>
                        @clan.Email
                    </td>
                    <td>
                        @clan.Adresa
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => clan.DatumRodjenja)
                    </td>
                    <td class="text-center">
                        @Html.ActionLink("Obriši", "Delete", "Clanovi", new { id = clan.ClanID }, new { @class = "btn btn-danger btn-sm" })

                    </td>

                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul id="pagination" class="pagination ">
            </ul>
        </nav>
    </div>

</div>


@section Scripts {
    <script>
        
        let currentPage = 1;
        let rowsPerPage = 7;

        $(document).ready(function () {
            const rows = $('#clanovi tbody tr');
            const totalPages = Math.ceil(rows.length / rowsPerPage);

            function displayRows() {
                rows.hide().slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage).show();
            }

            function displayPagination() {
                $('#pagination').empty();
                $('#pagination').append(`<button class="btn btn-sm m-1 btn-dark prev" ${currentPage === 1 ? 'disabled' : ''}>&lt;&lt; Prethodna</button>`);

                for (let i = 1; i <= totalPages; i++) {
                    const activeClass = i === currentPage ? 'btn-dark' : 'btn-secondary';
                    $('#pagination').append(`<button class="btn btn-sm m-1 ${activeClass}" data-page="${i}">${i}</button>`);
                }

                $('#pagination').append(`<button class="btn btn-sm m-1 btn-dark next" ${currentPage === totalPages ? 'disabled' : ''}>Sledeća &gt;&gt;</button>`);
            }

            $('#pagination').on('click', 'button', function (e) {
                e.preventDefault();

                if ($(this).hasClass('prev')) {
                    currentPage = Math.max(currentPage - 1, 1);
                } else if ($(this).hasClass('next')) {
                    currentPage = Math.min(currentPage + 1, totalPages);
                } else {
                    currentPage = +$(this).data('page');
                }
                displayRows();
                displayPagination();

            });

            displayRows();
            displayPagination();
        });








    </script>
}
